[{"C:\\Users\\AREK\\Desktop\\quiz-ts-practice\\src\\App.tsx":"1","C:\\Users\\AREK\\Desktop\\quiz-ts-practice\\src\\index.tsx":"2","C:\\Users\\AREK\\Desktop\\quiz-ts-practice\\src\\components\\QuestionCard.tsx":"3","C:\\Users\\AREK\\Desktop\\quiz-ts-practice\\src\\API.ts":"4","C:\\Users\\AREK\\Desktop\\quiz-ts-practice\\src\\utils.ts":"5"},{"size":2025,"mtime":1610621705053,"results":"6","hashOfConfig":"7"},{"size":197,"mtime":1610616181125,"results":"8","hashOfConfig":"7"},{"size":841,"mtime":1610621753932,"results":"9","hashOfConfig":"7"},{"size":818,"mtime":1610620663000,"results":"10","hashOfConfig":"7"},{"size":94,"mtime":1610620622004,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14"},"4dwpo7",{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\AREK\\Desktop\\quiz-ts-practice\\src\\App.tsx",["23"],"import React, { useState } from \"react\";\nimport { fetchQuizQuestions } from \"./API\";\n\nimport QuestionCard from \"./components/QuestionCard\";\n\nimport { Difficulty, QuestionState } from \"./API\";\n\ntype AnswerObject = {\n  question: string;\n  answer: string;\n  correct: boolean;\n  correctAnswer: string;\n};\n\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  console.log(questions);\n\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n\n    const newQuestions = await fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    );\n\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {};\n\n  const nextQuestion = () => {};\n\n  return (\n    <div className='App'>\n      <h1>REACT QUIZ</h1>\n      {gameOver || userAnswers.length === TOTAL_QUESTIONS ? (\n        <button className='start' onClick={startTrivia}>\n          Start\n        </button>\n      ) : null}\n      {!gameOver ? <p className='score'>Score: </p> :null}\n\n      {loading && <p>Loading question...</p>}\n      {!loading && !gameOver && (\n      <QuestionCard\n        questionNr={number +1}\n        totalQuestions={TOTAL_QUESTIONS}\n        question={questions[number].question}\n        answers={questions[number].answers}\n        userAnswer={userAnswers ? userAnswers[number] : undefined}\n        callback={checkAnswer}\n      />\n      )}\n      {!gameOver && !loading && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? (\n\n      <button className='next' onClick={nextQuestion}>\n        Next\n      </button>\n      ): null}\n    </div>\n  );\n};\n\nexport default App;\n","C:\\Users\\AREK\\Desktop\\quiz-ts-practice\\src\\index.tsx",[],"C:\\Users\\AREK\\Desktop\\quiz-ts-practice\\src\\components\\QuestionCard.tsx",[],"C:\\Users\\AREK\\Desktop\\quiz-ts-practice\\src\\API.ts",[],"C:\\Users\\AREK\\Desktop\\quiz-ts-practice\\src\\utils.ts",[],{"ruleId":"24","severity":1,"message":"25","line":22,"column":10,"nodeType":"26","messageId":"27","endLine":22,"endColumn":15},"@typescript-eslint/no-unused-vars","'score' is assigned a value but never used.","Identifier","unusedVar"]